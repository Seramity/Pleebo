{% extends 'templates/app.twig' %}

{% block pageTitle %}Inbox{% endblock %}

{% block content %}

    <h1>Inbox</h1>

    <div class="row">

        <div class="col-lg-3 mb-3">
            <div class="card">
                <div class="card-body">
                    <ul class="nav nav-pills flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="{{ path_for('inbox') }}">Inbox</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{{ path_for('inbox.sent') }}">Sent</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-lg-9">
            {% for question in questions %}
                {% include 'templates/question/question_request.twig' %}
            {% endfor %}

            {{ questions.links | raw }}

            {% if questions is empty %}
                <h3>:( Nothing here yet.</h3>
            {% endif %}
        </div>

    </div>


    <div class="modal fade" id="replyModal" tabindex="-1" role="dialog" aria-labelledby="replyModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Reply</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="{{ path_for('inbox.reply') }}" method="post" enctype="multipart/form-data" autocomplete="off" class="reply-form">
                    <div class="modal-body">
                        <p class="question-text muted"></p>
                        <div class="form-group">
                            <textarea class="form-control {% if errors.reply %} error{% endif %}" id="reply" name="reply" placeholder="Your reply" autofocus></textarea>
                            {% if errors.reply %} <div class="form_errors">{{ errors.reply | first }}</div> {% endif %}
                        </div>

                        <div class="form-group">
                            <img id="imgPreview" alt="Uploaded Image Preview" style="max-width:100%;"/>
                            <input type="file" class="form-control-file{% if errors.image %} error{% endif %}" id="image" name="image" accept="image/*" aria-describedby="imageHelp" style="width:100%;">
                            {% if errors.image %} <div class="form_errors">{{ errors.image | first }}</div> {% endif %}
                            <small id="imageHelp" class="form-text text-muted">Pick a image (.jpg, .png, .gif) under a size of 2MB.</small>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-outline-success" data-submit-value="Answering...">Answer</button>
                        <input type="hidden" name="qid" id="qid-input">
                        {{ csrf.field | raw }}
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function(){
            $('#replyModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var qid = button.data('qid');
                var qtext = button.data('qtext');
                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this);
                modal.find('.modal-body .question-text').text(qtext);
                modal.find('.modal-footer #qid-input').val(qid);
            });
            $('.reply-form').on('submit', function() {
                var self = $(this),
                    button = self.find('input[type="submit"], button[type="submit"]'),
                    submitValue = button.data('submit-value');

                button.attr('disabled', 'disabled').text((submitValue) ? submitValue : 'Please Wait...');
            });

            // Preview image upload
            function readImg(input) {
                if(input.files && input.files[0]) {
                    var reader = new FileReader;
                    reader.onload = function (e) {
                        $('#imgPreview').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $('#image').change(function () {
                readImg(this);
            });
        });
    </script>
{% endblock %}